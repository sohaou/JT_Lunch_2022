<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="menuPlan">
	<!-- 오늘 식단  -->
	<select id="todayMenuPlan" resultType="egovframework.jtLunch.admin.owner.DTO.MenuPlanDTO">
		SELECT 
			DATE_FORMAT(today_date,'%Y-%m-%d') as today_date, 
			steamed_rice, 
			soup
		FROM
			daily_diet
		WHERE 
			today_date = date_format(NOW(),'%Y-%m-%d')
	</select>
	<!-- 오늘 식단 _ 반찬 출력  -->
	<select id="todayMenuPlanSide" resultType="egovframework.jtLunch.admin.owner.DTO.SideMenuDTO">
		SELECT 
			menuplan_date,
			side_dish
		FROM
			daily_diet_sidedish
		WHERE 
			menuplan_date = date_format(NOW(),'%Y-%m-%d')
	</select>
	<!-- 식당 운영자 _ 식단 등록 -->
	<insert id="insertTodayMenu">
		<![CDATA[
			INSERT INTO daily_diet
				(
					today_date, 
					steamed_rice, 
					soup
				)
			VALUES 
				(
					#{today_date},
					#{steamed_rice},
					#{soup}
				)
		]]>
	</insert>
	<!-- 식당 운영자 _ 식단 등록(반찬등록) -->
	<insert id="insertTodayMenuSide" parameterType="egovframework.jtLunch.admin.owner.DTO.SideMenuDTO">
		<![CDATA[
			INSERT INTO daily_diet_sidedish
				(
					menuplan_date,
					side_dish
				)
			VALUES 
				(
					#{menuplan_date},
					#{side_dish}
				)
		]]>
	</insert>
	<!-- 식당 운영자 _ 식단 수정 -->
	<update id="UpdateMenuPlan">
		<![CDATA[
			UPDATE
				daily_diet
			SET
				steamed_rice = #{steamed_rice},
				soup=#{soup}
			WHERE
				today_date = #{today_date}
		]]>			
	</update>
	<!-- 식당 운영자 _ 식단 수정(반찬) -->
	<delete id="DeleteMenuPlanSide">
		<![CDATA[
			DELETE FROM 
				daily_diet_sidedish 
			WHERE 
				menuplan_date = #{select_date}			
		]]>
	</delete>
	<!-- 금일 예약자 수 출력 -->
	<select id="countReserve" resultType="int">
		SELECT 
			COUNT(*) 
		FROM 
			reserve
		WHERE 
			res_date = date_format(NOW(),'%Y-%m-%d')
	</select> 
	<!-- 금일 실 식사자 수 출력 -->
	<select id="countAte_user" resultType="int">
		SELECT 
			COUNT(*) 
		FROM 
			ate_user
		WHERE 
			ate_date = date_format(NOW(),'%Y-%m-%d')
	</select>
	<!-- 일별 식단 출력 (달력에서 한달) -->
	<select id="selectDayMenuPlan" resultType="egovframework.jtLunch.admin.owner.DTO.MenuPlanDTO">
		<![CDATA[
			SELECT 
				DATE_FORMAT(today_date,'%Y-%m-%d') as today_date, steamed_rice, soup
			FROM 
				daily_diet 
			WHERE 
				DATE(today_date) BETWEEN #{db_startDate} AND #{db_endDate}
		]]>
	</select>
	<!-- 일별 식단 출력_반찬(달력에서 한달) -->
	<select id="MonthMenuPlanSide" resultType="egovframework.jtLunch.admin.owner.DTO.SideMenuDTO">
		<![CDATA[
			SELECT 
				menuplan_date,
				side_dish
			FROM 
				daily_diet_sidedish 
			WHERE 
				DATE(menuplan_date) BETWEEN #{db_startDate} AND #{db_endDate}
		]]>
	</select>
	<!-- 선택한 날짜 메뉴 출력 -->
	<select id="SelectDateMenuPlan" resultType="egovframework.jtLunch.admin.owner.DTO.MenuPlanDTO">
		<![CDATA[
			SELECT 
				DATE_FORMAT(today_date,'%Y-%m-%d') as today_date, steamed_rice, soup
			FROM
				daily_diet
			WHERE 
				today_date = #{select_date}
		]]>
	</select>
	<!-- 선택한 날짜 메뉴 출력 _ 반찬 출력  -->
	<select id="SelectDateMenuPlanSide" resultType="egovframework.jtLunch.admin.owner.DTO.SideMenuDTO">
		<![CDATA[
			SELECT 
				menuplan_date,
				side_dish
			FROM
				daily_diet_sidedish
			WHERE 
				menuplan_date = #{select_date}
		]]>
	</select>
	<!-- 선택한 날짜에 식단의 존재 유무 확인 -->
	<select id="checkMenuIn" resultType="int">
		<![CDATA[
			SELECT 
				COUNT(*)
			FROM
				daily_diet
			WHERE 
				today_date = #{select_date}
		]]>
	</select>
	<!-- 식단이 등록되어 있는 날 출력 -->
	<select id="menuPlanInMonth" resultType="String">
		<![CDATA[
			SELECT 
				DATE_FORMAT(ate_date,'%Y-%m-%d') as ate_date  
			FROM 
				ate_user 
			WHERE 
				DATE(ate_date) BETWEEN #{db_startDate} AND #{db_endDate}
			GROUP BY
				DATE_FORMAT(ate_date,'%Y-%m-%d')
		]]>
	</select>
	<!-- 식단 출력 -->
	<select id="dailyDietAll" resultType="egovframework.jtLunch.admin.owner.DTO.MenuPlanDTO">
		<![CDATA[
			SELECT 
				DATE_FORMAT(dd.today_date,'%d') as today_date,
				dd.steamed_rice, 
				dd.soup, 
				group_concat(dds.side_dish separator ',') as side_dish
			FROM 
				daily_diet as dd
			INNER JOIN 
				daily_diet_sidedish as dds
			ON
				dd.today_date = dds.menuplan_date
			WHERE 
				DATE(dd.today_date) BETWEEN #{db_startDate} AND #{db_endDate}
			GROUP BY 
				dd.today_date
		]]>
	</select>
</mapper>

