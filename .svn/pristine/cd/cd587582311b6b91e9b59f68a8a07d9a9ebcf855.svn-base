package egovframework.jtLunch.admin.dashboard.Controller;

import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import egovframework.jtLunch.admin.dashboard.DTO.DashBoardDTO;
import egovframework.jtLunch.admin.dashboard.Service.DashBoardService;
import egovframework.jtLunch.admin.dashboard.Util.WeekDayUtil;
import egovframework.jtLunch.admin.owner.Service.MenuService;

@Controller
public class DashBoardController {
	
	@Resource(name="dashBoardService")
	private DashBoardService dashBoardService;
	@Autowired
	private MenuService menuService;
	//관리자 main
	@GetMapping("/admin/main")
	public String DashBoardPage(Model model) throws Exception {
		
		Calendar cal = Calendar.getInstance();
		
		int year = cal.get(Calendar.YEAR);
		int month = cal.get(Calendar.MONTH) +1;
		int date = cal.get(Calendar.DATE);
		
		DashBoardDTO dashboardDTO = dashBoardService.getChartData();
		DashBoardDTO vo = dashBoardService.getChartMonth();
		List<DashBoardDTO> dto = dashBoardService.searchUser();
		
		int money=7000;
		int reserveCount=menuService.countReserve();
		int ate_user=menuService.countAte_user();
		int monthate = dashBoardService.getmonthAte();
		Date nowDate = new Date();
		SimpleDateFormat simpleDateFormat = new SimpleDateFormat("MM");
		String strNowDate = simpleDateFormat.format(nowDate);
		model.addAttribute("reserveCount", reserveCount);
		model.addAttribute("ate_user", ate_user);
		model.addAttribute("month", strNowDate);
		model.addAttribute("money", money);
		model.addAttribute("weekCnt", WeekDayUtil.getCurrentWeekOfMonth(year,month,date));
		model.addAttribute("chartData", dashboardDTO);
		model.addAttribute("chartMData", vo);
		model.addAttribute("monthate", monthate);
		model.addAttribute("searchUser", dto);
		
		return "admin/adminMain";
	}
	@RequestMapping(value = "/dashboard/userDelete", method = RequestMethod.POST, produces = "application/text; charset=utf8")
	@ResponseBody
	public String delete(@RequestParam("user_id") String user_id, Model model) throws Exception {
		String resultMsg = "";
		
		try {
				
			dashBoardService.deleteUser(user_id);
			System.out.println("삭제완료");
				
			resultMsg = "삭제완료";
		} catch(Exception e){
			System.out.println(e.getMessage());
			resultMsg = "삭제실패";
		}
			
		return resultMsg;	
	}
	@GetMapping("/admin/logout")
	public String adminLogoutPage(Model model) throws Exception {
	
		return "admin/login/adminLogin";
	}
}
